<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.usrobot.restful.mapper.InspectionPositionMapper" >
  <resultMap id="BaseResultMap" type="cn.com.usrobot.restful.pojo.InspectionPosition" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="pos_x" property="posX" jdbcType="REAL" />
    <result column="pos_y" property="posY" jdbcType="REAL" />
    <result column="pos_z" property="posZ" jdbcType="REAL" />
    <result column="ori_z" property="oriZ" jdbcType="REAL" />
    <result column="ori_w" property="oriW" jdbcType="REAL" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="INTEGER" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, seq, pos_x, pos_y, pos_z, ori_z, ori_w, description, device_id, enabled
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.usrobot.restful.pojo.InspectionPositionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inspection_position
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from inspection_position
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from inspection_position
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.usrobot.restful.pojo.InspectionPositionExample" >
    delete from inspection_position
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.usrobot.restful.pojo.InspectionPosition" >
    insert into inspection_position (id, seq, pos_x, pos_y, 
      pos_z, ori_z, ori_w, description, 
      device_id, enabled)
    values (#{id,jdbcType=INTEGER}, #{seq,jdbcType=INTEGER}, #{posX,jdbcType=REAL}, #{posY,jdbcType=REAL}, 
      #{posZ,jdbcType=REAL}, #{oriZ,jdbcType=REAL}, #{oriW,jdbcType=REAL}, #{description,jdbcType=VARCHAR}, 
      #{deviceId,jdbcType=INTEGER}, #{enabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.usrobot.restful.pojo.InspectionPosition" >
    insert into inspection_position
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="posX != null" >
        pos_x,
      </if>
      <if test="posY != null" >
        pos_y,
      </if>
      <if test="posZ != null" >
        pos_z,
      </if>
      <if test="oriZ != null" >
        ori_z,
      </if>
      <if test="oriW != null" >
        ori_w,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="posX != null" >
        #{posX,jdbcType=REAL},
      </if>
      <if test="posY != null" >
        #{posY,jdbcType=REAL},
      </if>
      <if test="posZ != null" >
        #{posZ,jdbcType=REAL},
      </if>
      <if test="oriZ != null" >
        #{oriZ,jdbcType=REAL},
      </if>
      <if test="oriW != null" >
        #{oriW,jdbcType=REAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.usrobot.restful.pojo.InspectionPositionExample" resultType="java.lang.Integer" >
    select count(*) from inspection_position
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update inspection_position
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.posX != null" >
        pos_x = #{record.posX,jdbcType=REAL},
      </if>
      <if test="record.posY != null" >
        pos_y = #{record.posY,jdbcType=REAL},
      </if>
      <if test="record.posZ != null" >
        pos_z = #{record.posZ,jdbcType=REAL},
      </if>
      <if test="record.oriZ != null" >
        ori_z = #{record.oriZ,jdbcType=REAL},
      </if>
      <if test="record.oriW != null" >
        ori_w = #{record.oriW,jdbcType=REAL},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceId != null" >
        device_id = #{record.deviceId,jdbcType=INTEGER},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update inspection_position
    set id = #{record.id,jdbcType=INTEGER},
      seq = #{record.seq,jdbcType=INTEGER},
      pos_x = #{record.posX,jdbcType=REAL},
      pos_y = #{record.posY,jdbcType=REAL},
      pos_z = #{record.posZ,jdbcType=REAL},
      ori_z = #{record.oriZ,jdbcType=REAL},
      ori_w = #{record.oriW,jdbcType=REAL},
      description = #{record.description,jdbcType=VARCHAR},
      device_id = #{record.deviceId,jdbcType=INTEGER},
      enabled = #{record.enabled,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.usrobot.restful.pojo.InspectionPosition" >
    update inspection_position
    <set >
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="posX != null" >
        pos_x = #{posX,jdbcType=REAL},
      </if>
      <if test="posY != null" >
        pos_y = #{posY,jdbcType=REAL},
      </if>
      <if test="posZ != null" >
        pos_z = #{posZ,jdbcType=REAL},
      </if>
      <if test="oriZ != null" >
        ori_z = #{oriZ,jdbcType=REAL},
      </if>
      <if test="oriW != null" >
        ori_w = #{oriW,jdbcType=REAL},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.usrobot.restful.pojo.InspectionPosition" >
    update inspection_position
    set seq = #{seq,jdbcType=INTEGER},
      pos_x = #{posX,jdbcType=REAL},
      pos_y = #{posY,jdbcType=REAL},
      pos_z = #{posZ,jdbcType=REAL},
      ori_z = #{oriZ,jdbcType=REAL},
      ori_w = #{oriW,jdbcType=REAL},
      description = #{description,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>